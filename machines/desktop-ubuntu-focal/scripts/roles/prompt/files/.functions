function tosubl() {
    TMPDIR=${TMPDIR:-/tmp}  # default to /tmp if TMPDIR isn't set
    F=$(mktemp $TMPDIR/tosubl-XXXXXXXX)
    cat >| $F  # use >| instead of > if you set noclobber in bash
    subl $F
    sleep .3  # give subl a little time to open the file
    rm -f $F  # file will be deleted as soon as subl closes it
}

function webm-to-gif() {
    ffmpeg -i $1 -pix_fmt rgb8 $2
}

function webm-to-mp4() {
    ffmpeg -i $1 -max_muxing_queue_size 9999 $2
}

function superkill() {
    sudo kill `sudo lsof -t -i:$1`
}

function supertouch() {
    for f in "$@"; do mkdir -p "$(dirname "$f")"; done
    touch "$@"
}

function shtd {
    shutdown +$1
}

function monit {
    eval "$1" & top -p $!
}

# backup to $1 with name backup-<hostname>-<date>.tgz
function backup() {
    # clean
    rm -rf $HOME/backup/apt $HOME/backup/dconf.settings
    mkdir -p $HOME/backup/home

    # backup packages
    dpkg --get-selections > $HOME/backup/apt

    # Prepare backup
    date=$(date +%F)
    hostname=$(hostname -s)
    archive_filename="backup-$hostname-$date.tgz"
    if [ -z "$1" ]; then
        dest="/home/romainprignon/backup/home"
    else
        dest=$1
    fi
    included_files="/home/romainprignon/app \
                    /home/romainprignon/.aws \
                    /home/romainprignon/.azure \
                    /home/romainprignon/bin \
                    /home/romainprignon/.config \
                    /home/romainprignon/backup \
                    /home/romainprignon/Documents \
                    /home/romainprignon/keys \
                    /home/romainprignon/Music \
                    /home/romainprignon/Pictures \
                    /home/romainprignon/Videos \
                    /home/romainprignon/.ssh \
                    /home/romainprignon/.local/share/gnome-shell/extensions \
                    /etc/apt/sources.list.d"
    excluded_files="--exclude /home/romainprignon/backup/home \
                    --exclude /home/romainprignon/.config/google-chrome"

    # backup
    dconf dump / > $HOME/backup/dconf.settings
    sudo tar $excluded_files -cpzf $dest/$archive_filename $included_files
}

# restore from $1 to $2
function restore() {
    if [ -z "$2" ]; then
        dest="/"
    else
        dest=$2
    fi

    sudo tar -xvpzf $1 -C $dest --numeric-owner

    # restore: dconf
    dconf load / < $HOME/backup/dconf.settings

    # restore: home
    sudo apt update
    sudo apt install dselect
    sudo dselect update
    sudo dpkg --set-selections < $HOME/backup/apt
    sudo apt-get -u dselect-upgrade
}
