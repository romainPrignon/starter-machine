---
- name: create .composer dir
  tags: php
  file:
    path: "{{ ansible_env.HOME }}/.composer"
    state: directory

- name: define php version
  vars:
    php_version: '7.4'
    php_versions_install_recommends: false
  include_role:
    name: geerlingguy.php-versions
    apply:
      become: yes

- name: install php
  vars:
    php_enable_webserver: false
    php_install_recommends: false
    php_packages:
      - php
      - php7.4-apcu
      - php7.4-common
      - php7.4-cli
      - php7.4-curl
      - php7.4-dev
      - php7.4-intl
      - php7.4-json
      - php7.4-mbstring
      - php7.4-mysql
      - php7.4-opcache
      # - php-pear
      - php7.4-readline
      - php7.4-sqlite3
      - php7.4-xml
      - php7.4-zip
  include_role:
    name: geerlingguy.php
    apply:
      become: yes

- name: install composer
  vars:
    composer_path: "{{ ansible_env.HOME }}/bin/composer"
  include_role:
    name: geerlingguy.composer
    apply:
      become: yes

# - name: install xdebug
  # vars:
    # php_xdebug_default_enable: 1
    # php_xdebug_coverage_enable: 1
    # php_xdebug_remote_enable: "true"
  # include_role:
    # name: geerlingguy.php-xdebug
    # apply:
      # become: yes

- name: copy composer.json
  tags: php
  copy:
    src: composer.json
    dest: "{{ ansible_env.HOME }}/.composer/composer.json"
    mode: '0644'

# - name: install composer global deps
#   tags: php
#   shell: "{{ ansible_env.HOME }}/bin/composer global install"

- name: install symfony
  tags: php
  shell: wget https://get.symfony.com/cli/installer -O - | bash
  args:
    creates: "{{ ansible_env.HOME }}/.symfony/bin/symfony" # run if file not exist
